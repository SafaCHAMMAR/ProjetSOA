
package services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AdminWS", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AdminWS {


    /**
     * 
     * @param login
     * @param pwd
     */
    @WebMethod
    @RequestWrapper(localName = "addAdmin", targetNamespace = "http://services/", className = "services.AddAdmin")
    @ResponseWrapper(localName = "addAdminResponse", targetNamespace = "http://services/", className = "services.AddAdminResponse")
    @Action(input = "http://services/AdminWS/addAdminRequest", output = "http://services/AdminWS/addAdminResponse")
    public void addAdmin(
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "pwd", targetNamespace = "")
        String pwd);

    /**
     * 
     * @param placeDisp
     * @param prix
     * @param dateArr
     * @param villeDest
     * @param dateDep
     * @param villeDep
     */
    @WebMethod
    @RequestWrapper(localName = "addVol", targetNamespace = "http://services/", className = "services.AddVol")
    @ResponseWrapper(localName = "addVolResponse", targetNamespace = "http://services/", className = "services.AddVolResponse")
    @Action(input = "http://services/AdminWS/addVolRequest", output = "http://services/AdminWS/addVolResponse")
    public void addVol(
        @WebParam(name = "villeDep", targetNamespace = "")
        String villeDep,
        @WebParam(name = "villeDest", targetNamespace = "")
        String villeDest,
        @WebParam(name = "placeDisp", targetNamespace = "")
        int placeDisp,
        @WebParam(name = "prix", targetNamespace = "")
        int prix,
        @WebParam(name = "dateDep", targetNamespace = "")
        String dateDep,
        @WebParam(name = "DateArr", targetNamespace = "")
        String dateArr);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "existAdmin", targetNamespace = "http://services/", className = "services.ExistAdmin")
    @ResponseWrapper(localName = "existAdminResponse", targetNamespace = "http://services/", className = "services.ExistAdminResponse")
    @Action(input = "http://services/AdminWS/existAdminRequest", output = "http://services/AdminWS/existAdminResponse")
    public boolean existAdmin(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<services.Admin>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listAdmin", targetNamespace = "http://services/", className = "services.ListAdmin")
    @ResponseWrapper(localName = "listAdminResponse", targetNamespace = "http://services/", className = "services.ListAdminResponse")
    @Action(input = "http://services/AdminWS/listAdminRequest", output = "http://services/AdminWS/listAdminResponse")
    public List<Admin> listAdmin();

    /**
     * 
     * @param idVoy
     * @param idClient
     */
    @WebMethod
    @RequestWrapper(localName = "addBooking", targetNamespace = "http://services/", className = "services.AddBooking")
    @ResponseWrapper(localName = "addBookingResponse", targetNamespace = "http://services/", className = "services.AddBookingResponse")
    @Action(input = "http://services/AdminWS/addBookingRequest", output = "http://services/AdminWS/addBookingResponse")
    public void addBooking(
        @WebParam(name = "idVoy", targetNamespace = "")
        int idVoy,
        @WebParam(name = "idClient", targetNamespace = "")
        int idClient);

}
